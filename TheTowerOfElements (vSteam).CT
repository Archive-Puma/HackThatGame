<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="26">
  <CheatEntries>
    <CheatEntry>
      <ID>7</ID>
      <Description>"The Tower of Elements"</Description>
      <Options moHideChildren="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <Color>000055</Color>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>6</ID>
          <Description>"No Mage Movement"</Description>
          <LastState/>
          <Color>000091</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : TowerOfElements.exe
  Version: 
  Date   : 2017-11-03
  Author : Gatete

  This script does blah blah blah
}

[ENABLE]

aobscan(NoMove,55 8B EC 56 81 EC C4 00 00 00) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  ret
  jmp return

NoMove:
  jmp newmem
  nop
  nop
  nop
  nop
  nop
return:
registersymbol(NoMove)

[DISABLE]

NoMove:
  db 55 8B EC 56 81 EC C4 00 00 00

unregistersymbol(NoMove)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 08479ED8

""+8479EBE: FF 50 38                       -  call dword ptr [eax+38]
""+8479EC1: 83 C4 10                       -  add esp,10
""+8479EC4: 8D 65 FC                       -  lea esp,[ebp-04]
""+8479EC7: 5E                             -  pop esi
""+8479EC8: C9                             -  leave 
""+8479EC9: C3                             -  ret 
""+8479ECA: 00 00                          -  add [eax],al
""+8479ECC: 68 38 A1 C2 11                 -  push 11C2A138
""+8479ED1: E9 52 61 A1 FF                 -  jmp 07E90028
""+8479ED6: 00 00                          -  add [eax],al
// ---------- INJECTING HERE ----------
""+8479ED8: 55                             -  push ebp
""+8479ED9: 8B EC                          -  mov ebp,esp
""+8479EDB: 56                             -  push esi
""+8479EDC: 81 EC C4 00 00 00              -  sub esp,000000C4
// ---------- DONE INJECTING  ----------
""+8479EE2: 8B 75 08                       -  mov esi,[ebp+08]
""+8479EE5: C7 85 54 FF FF FF 00 00 00 00  -  mov [ebp-000000AC],00000000
""+8479EEF: C7 85 58 FF FF FF 00 00 00 00  -  mov [ebp-000000A8],00000000
""+8479EF9: C7 85 5C FF FF FF 00 00 00 00  -  mov [ebp-000000A4],00000000
""+8479F03: C7 85 60 FF FF FF 00 00 00 00  -  mov [ebp-000000A0],00000000
""+8479F0D: C7 85 64 FF FF FF 00 00 00 00  -  mov [ebp-0000009C],00000000
""+8479F17: C7 85 68 FF FF FF 00 00 00 00  -  mov [ebp-00000098],00000000
""+8479F21: C7 85 6C FF FF FF 00 00 00 00  -  mov [ebp-00000094],00000000
""+8479F2B: C7 85 70 FF FF FF 00 00 00 00  -  mov [ebp-00000090],00000000
""+8479F35: C7 85 74 FF FF FF 00 00 00 00  -  mov [ebp-0000008C],00000000
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>2</ID>
          <Description>"100k Value of Goblins"</Description>
          <LastState/>
          <Color>0000BB</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : TowerOfElements.exe
  Version: 
  Date   : 2017-11-03
  Author : Gatete

  This script does blah blah blah
}

[ENABLE]

aobscan(WorthGoblins,89 47 24 8B 47 2C 40) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [edi+24],100000
  mov eax,[edi+2C]
  jmp return

WorthGoblins:
  jmp newmem
  nop
return:
registersymbol(WorthGoblins)

[DISABLE]

WorthGoblins:
  db 89 47 24 8B 47 2C

unregistersymbol(WorthGoblins)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 08BBAB92

""+8BBAB7A: AA                 -  stosb 
""+8BBAB7B: 54                 -  push esp
""+8BBAB7C: A1 FF 00 00 55     -  mov eax,[550000FF]
""+8BBAB81: 8B EC              -  mov ebp,esp
""+8BBAB83: 57                 -  push edi
""+8BBAB84: 83 EC 14           -  sub esp,14
""+8BBAB87: 8B 7D 08           -  mov edi,[ebp+08]
""+8BBAB8A: 8B 47 24           -  mov eax,[edi+24]
""+8BBAB8D: 8B 4F 28           -  mov ecx,[edi+28]
""+8BBAB90: 03 C1              -  add eax,ecx
// ---------- INJECTING HERE ----------
""+8BBAB92: 89 47 24           -  mov [edi+24],eax
""+8BBAB95: 8B 47 2C           -  mov eax,[edi+2C]
// ---------- DONE INJECTING  ----------
""+8BBAB98: 40                 -  inc eax
""+8BBAB99: 89 47 2C           -  mov [edi+2C],eax
""+8BBAB9C: 8B 05 A0 BE 3E 08  -  mov eax,[083EBEA0]
""+8BBABA2: 8B 4F 24           -  mov ecx,[edi+24]
""+8BBABA5: 8B 57 2C           -  mov edx,[edi+2C]
""+8BBABA8: 83 EC 0C           -  sub esp,0C
""+8BBABAB: 52                 -  push edx
""+8BBABAC: 6A FF              -  push -01
""+8BBABAE: 6A FF              -  push -01
""+8BBABB0: 51                 -  push ecx
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>1</ID>
          <Description>"100k Initial/Final Points"</Description>
          <LastState/>
          <Color>0000E1</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : TowerOfElements.exe
  Version: 
  Date   : 2017-11-03
  Author : Gatete

  This script does blah blah blah
}

[ENABLE]

aobscan(InitialPoints,C7 47 24 00 00 00 00 C7 47 28 01) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov [edi+24],00100000
  jmp return

InitialPoints:
  jmp newmem
  nop
  nop
return:
registersymbol(InitialPoints)

[DISABLE]

InitialPoints:
  db C7 47 24 00 00 00 00

unregistersymbol(InitialPoints)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 08BB8885

""+8BB8865: 39 00                 -  cmp [eax],eax
""+8BB8867: E8 54 00 00 00        -  call 08BB88C0
""+8BB886C: 83 C4 10              -  add esp,10
""+8BB886F: 8B 05 A0 3E 3E 08     -  mov eax,[083E3EA0]
""+8BB8875: 83 EC 08              -  sub esp,08
""+8BB8878: 6A 00                 -  push 00
""+8BB887A: 50                    -  push eax
""+8BB887B: 39 00                 -  cmp [eax],eax
""+8BB887D: E8 76 00 00 00        -  call 08BB88F8
""+8BB8882: 83 C4 10              -  add esp,10
// ---------- INJECTING HERE ----------
""+8BB8885: C7 47 24 00 00 00 00  -  mov [edi+24],00000000
// ---------- DONE INJECTING  ----------
""+8BB888C: C7 47 28 01 00 00 00  -  mov [edi+28],00000001
""+8BB8893: C7 47 2C 00 00 00 00  -  mov [edi+2C],00000000
""+8BB889A: C6 47 42 00           -  mov byte ptr [edi+42],00
""+8BB889E: 8D 65 FC              -  lea esp,[ebp-04]
""+8BB88A1: 5F                    -  pop edi
""+8BB88A2: C9                    -  leave 
""+8BB88A3: C3                    -  ret 
""+8BB88A4: 68 F0 E9 23 12        -  push 1223E9F0
""+8BB88A9: E9 7A 77 A1 FF        -  jmp 085D0028
""+8BB88AE: 00 00                 -  add [eax],al
}
</AssemblerScript>
        </CheatEntry>
        <CheatEntry>
          <ID>12</ID>
          <Description>"Gets 500 gems instead of 1"</Description>
          <LastState/>
          <Color>0D0DFF</Color>
          <VariableType>Auto Assembler Script</VariableType>
          <AssemblerScript>{ Game   : TowerOfElements.exe
  Version: 
  Date   : 2017-11-03
  Author : Gatete

  This script does blah blah blah
}

[ENABLE]

aobscan(Gems,41 89 48 20 83 EC 0C) // should be unique
alloc(newmem,$1000)

label(code)
label(return)

newmem:

code:
  mov ecx,500
  mov [eax+20],ecx
  sub esp,0C
  jmp return

Gems:
  jmp newmem
  nop
  nop
return:
registersymbol(Gems)

[DISABLE]

Gems:
  db 41 89 48 20 83 EC 0C

unregistersymbol(Gems)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 0863860C

""+86385F2: C3                 -  ret 
""+86385F3: 00 68 90           -  add [eax-70],ch
""+86385F6: E8 E3 11 E9 2A     -  call 334C97DE
""+86385FB: 7A A0              -  jp UnityEngine.UI:Selectable:FindSelectableOnLeft+a5
""+86385FD: FF 00              -  inc [eax]
""+86385FF: 00 55 8B           -  add [ebp-75],dl
""+8638602: EC                 -  in al,dx
""+8638603: 83 EC 08           -  sub esp,08
""+8638606: 8B 45 08           -  mov eax,[ebp+08]
""+8638609: 8B 48 20           -  mov ecx,[eax+20]
// ---------- INJECTING HERE ----------
""+863860C: 41                 -  inc ecx
""+863860D: 89 48 20           -  mov [eax+20],ecx
""+8638610: 83 EC 0C           -  sub esp,0C
// ---------- DONE INJECTING  ----------
""+8638613: 50                 -  push eax
""+8638614: E8 67 05 FC FF     -  call CharacterManager:SaveGems
""+8638619: 83 C4 10           -  add esp,10
""+863861C: C9                 -  leave 
""+863861D: C3                 -  ret 
""+863861E: 00 00              -  add [eax],al
""+8638620: 55                 -  push ebp
""+8638621: 8B EC              -  mov ebp,esp
""+8638623: 83 EC 08           -  sub esp,08
""+8638626: 83 7D 0C 00        -  cmp dword ptr [ebp+0C],00
}
</AssemblerScript>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>Change of je AchievementManager:CheckAchievements+a4</Description>
      <Address>08BBACC5</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
        <Byte>85</Byte>
        <Byte>C0</Byte>
      </Before>
      <Actual>
        <Byte>74</Byte>
        <Byte>25</Byte>
      </Actual>
      <After>
        <Byte>8B</Byte>
        <Byte>05</Byte>
        <Byte>D4</Byte>
        <Byte>3E</Byte>
        <Byte>3E</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call GUIManager:ChangeState</Description>
      <Address>088BCFA9</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>6A</Byte>
        <Byte>03</Byte>
        <Byte>50</Byte>
        <Byte>39</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>E8</Byte>
        <Byte>62</Byte>
        <Byte>F8</Byte>
        <Byte>FC</Byte>
        <Byte>FF</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
        <Byte>8B</Byte>
        <Byte>05</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>Change of call eax</Description>
      <Address>08F19B77</Address>
      <ModuleName/>
      <ModuleNameOffset>0</ModuleNameOffset>
      <Before>
        <Byte>75</Byte>
        <Byte>08</Byte>
        <Byte>8B</Byte>
        <Byte>45</Byte>
        <Byte>14</Byte>
      </Before>
      <Actual>
        <Byte>FF</Byte>
        <Byte>D0</Byte>
      </Actual>
      <After>
        <Byte>83</Byte>
        <Byte>C4</Byte>
        <Byte>10</Byte>
        <Byte>89</Byte>
        <Byte>45</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Structures StructVersion="2">
    <Structure Name="unnamed structure" AutoFill="0" AutoCreate="1" DefaultHex="0" AutoDestroy="0" DoNotSaveLocal="0" RLECompression="1" AutoCreateStructsize="4096">
      <Elements>
        <Element Offset="0" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="4" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="8" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="12" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="16" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="20" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="24" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="28" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="32" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="36" Vartype="4 Bytes" Bytesize="4" Description="Points" DisplayMethod="Unsigned Integer"/>
        <Element Offset="40" Vartype="4 Bytes" Bytesize="4" Description="Multiplier" DisplayMethod="Unsigned Integer"/>
        <Element Offset="44" Vartype="4 Bytes" Bytesize="4" Description="Combo" DisplayMethod="Unsigned Integer"/>
        <Element Offset="48" Vartype="4 Bytes" Bytesize="4" RLECount="3" DisplayMethod="Hexadecimal"/>
        <Element Offset="60" Vartype="4 Bytes" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="80" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="84" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="88" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="92" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="96" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="100" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="104" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="120" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="128" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="132" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="152" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="160" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="164" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="168" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="172" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="176" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="180" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="184" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="200" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="208" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="212" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="232" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="240" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="244" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="248" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="252" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="256" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="260" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="264" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="280" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="288" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="292" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="312" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="320" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="324" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="328" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="332" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="336" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="340" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="344" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="360" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="368" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="372" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="392" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="400" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="404" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="408" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="412" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="416" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="420" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="424" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="440" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="448" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="452" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="472" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="480" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="484" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="488" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="492" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="496" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="500" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="504" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="520" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="528" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="532" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="552" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="560" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="564" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="568" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="572" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="576" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="580" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="584" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="600" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="608" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="612" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="632" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="640" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="644" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="648" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="652" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="656" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="660" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="664" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="680" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="688" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="692" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="712" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="720" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="724" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="728" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Hexadecimal"/>
        <Element Offset="732" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="736" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="744" Vartype="Float" Bytesize="4" RLECount="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="760" Vartype="Double" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="768" Vartype="4 Bytes" Bytesize="4" DisplayMethod="Unsigned Integer"/>
        <Element Offset="772" Vartype="Float" Bytesize="4" RLECount="5" DisplayMethod="Unsigned Integer"/>
        <Element Offset="792" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="800" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="804" Vartype="4 Bytes" Bytesize="4" RLECount="2" DisplayMethod="Unsigned Integer"/>
        <Element Offset="812" Vartype="Pointer" Bytesize="8" DisplayMethod="Unsigned Integer"/>
        <Element Offset="816" Vartype="4 Bytes" Bytesize="4" RLECount="820" DisplayMethod="Unsigned Integer"/>
      </Elements>
    </Structure>
  </Structures>
</CheatTable>
